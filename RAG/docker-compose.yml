
services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
     - "5432:5432"
    volumes:
      - datos_postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U your_username"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - appnet
  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server ${MINIO_DATA_DIR} --console-address ":${MINIO_CONSOLE_PORT}"
    ports:
      - "${MINIO_API_PORT}:9000"     
      - "${MINIO_CONSOLE_PORT}:9001" 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - datos_minio:/data
    networks:
      - appnet
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:6333/readyz"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - appnet
    volumes:
      - datos_qdrant:/qdrant/storage
networks:
    appnet:
volumes:
    datos_postgres:
    datos_minio:
    datos_qdrant:
